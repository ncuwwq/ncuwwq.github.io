<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hans Blog</title>
  
  <subtitle>每一个成功者都是从努力开始</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-15T14:14:26.149Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Hans</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>初步认识celery</title>
    <link href="http://yoursite.com/2018/10/15/%E5%88%9D%E6%AD%A5%E8%AE%A4%E8%AF%86celery/"/>
    <id>http://yoursite.com/2018/10/15/初步认识celery/</id>
    <published>2018-10-15T12:25:53.000Z</published>
    <updated>2018-10-15T14:14:26.149Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Celery-的简单认识"><a href="#Celery-的简单认识" class="headerlink" title="Celery 的简单认识"></a>Celery 的简单认识</h1><p>Celery的架构由三部分组成，消息中间件（broker），任务执行单元（worker）和任务执行结果存储（task result store）组成。</p><p>1.消息中间件</p><p>Celery本身不提供消息服务，但是可以方便的和第三方提供的消息中间件集成。包括，RabbitMQ, Redis, MongoDB (experimental), Amazon SQS (experimental),CouchDB (experimental), SQLAlchemy (experimental),Django ORM (experimental), IronMQ</p><p>2.任务执行单元</p><p>Worker是Celery提供的任务执行的单元，worker并发的运行在分布式的系统节点中。</p><p>3.任务结果存储</p><p>Task result store用来存储Worker执行的任务的结果，Celery支持以不同方式存储任务的结果，包括AMQP, Redis，memcached, MongoDB，SQLAlchemy, Django ORM，Apache Cassandra, IronCache</p><p>更多信息可参考文档<a href="http://docs.jinkan.org/docs/celery/getting-started/introduction.html" target="_blank" rel="noopener">http://docs.jinkan.org/docs/celery/getting-started/introduction.html</a></p><h2 id="celery的初步使用"><a href="#celery的初步使用" class="headerlink" title="celery的初步使用"></a>celery的初步使用</h2><p><strong>本地环境</strong></p><p>win10家庭版,python3.6,celery4.2,redis4.0</p><p>(环境安装简单，Python的编辑器使用的是pycharm)</p><h4 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h4><p>按照官网文档上的步骤，首先创建一个task.py文件，代码如图</p><p>导入celery模块，因为我使用的是redis作为中间件所以还要安装相关依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install celery[redis]</span><br></pre></td></tr></table></figure><p>backend是结果返回的地方，这里celery会把任务处理的结果返回redis中</p><p>使用@app.task装饰器修饰add函数，接下来我就开始测试了</p><p>celery成功跑起来了，接下来进入Python shell添加任务</p><p>what？竟然报错了，再去看看celery</p><p>很明显报了一个ValueError: not enough values to unpack (expected 3, got 0)错误，百度一下网上有人说是4.0版本不支持win10，但也有人给出了解决方案，切换celery的执行模式，celery默认是执行模式是perfork(多进程)，win10无法正常工作，因此得切换其他模式，我试了两种solo和eventlet，结果都可行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">celery -A task worker --pool=solo -l info</span><br></pre></td></tr></table></figure><p>solo指明一个一个的处理任务，这样处理很慢，另一种eventlet使用的是协成模式，使用前先安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install eventlet</span><br><span class="line">celery -A task worker -l info -P eventlet</span><br></pre></td></tr></table></figure><p>然后再次执行add函数</p><p>已经成功执行了</p><p>最后再去redis看看结果吧</p><p>失败和成功的记录都在里面了，celery的初步使用到此结束了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Celery-的简单认识&quot;&gt;&lt;a href=&quot;#Celery-的简单认识&quot; class=&quot;headerlink&quot; title=&quot;Celery 的简单认识&quot;&gt;&lt;/a&gt;Celery 的简单认识&lt;/h1&gt;&lt;p&gt;Celery的架构由三部分组成，消息中间件（broker），
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/09/25/hello-world/"/>
    <id>http://yoursite.com/2018/09/25/hello-world/</id>
    <published>2018-09-25T02:41:19.378Z</published>
    <updated>2018-09-25T02:41:19.378Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
